const first=([e])=>e,isFunction=e=>"function"==typeof e,getElements=e=>Array.isArray(e)?e:!e||e.nodeType?[e]:Array.from("string"==typeof e?document.querySelectorAll(e):e),accelerate=(e,t)=>e.style.willChange=t?t.map(({property:e})=>e).join():"auto",hexPairs=e=>{const t=e.split(""),r=e.length<5?t.map(e=>e+e):t.reduce((e,r,a)=>(a%2&&e.push(t[a-1]+r),e),[]);return r.length<4&&r.push("ff"),r},convert=e=>hexPairs(e).map(e=>parseInt(e,16)),rgba=e=>{const t=e.slice(1),[r,a,n,i]=convert(t);return`rgba(${r}, ${a}, ${n}, ${i/255})`},pi2=2*Math.PI,getOffset=(e,t)=>t/pi2*Math.asin(1/e),easings={linear:e=>e,"in-cubic":e=>e**3,"in-quartic":e=>e**4,"in-quintic":e=>e**5,"in-exponential":e=>1024**(e-1),"in-circular":e=>1-Math.sqrt(1-e**2),"in-elastic":(e,t,r)=>{const a=Math.max(t,1),n=getOffset(a,r);return-a*2**(10*(e-=1))*Math.sin((e-n)*pi2/r)},"out-cubic":e=>--e**3+1,"out-quartic":e=>1- --e**4,"out-quintic":e=>--e**5+1,"out-exponential":e=>1-2**(-10*e),"out-circular":e=>Math.sqrt(1- --e**2),"out-elastic":(e,t,r)=>{const a=Math.max(t,1),n=getOffset(a,r);return a*2**(-10*e)*Math.sin((e-n)*pi2/r)+1},"in-out-cubic":e=>(e*=2)<1?.5*e**3:.5*((e-=2)*e**2+2),"in-out-quartic":e=>(e*=2)<1?.5*e**4:-.5*((e-=2)*e**3-2),"in-out-quintic":e=>(e*=2)<1?.5*e**5:.5*((e-=2)*e**4+2),"in-out-exponential":e=>(e*=2)<1?.5*1024**(e-1):.5*(2-2**(-10*(e-1))),"in-out-circular":e=>(e*=2)<1?-.5*(Math.sqrt(1-e**2)-1):.5*(Math.sqrt(1-(e-=2)*e)+1),"in-out-elastic":(e,t,r)=>{const a=Math.max(t,1),n=getOffset(a,r);return(e*=2)<1?a*2**(10*(e-=1))*Math.sin((e-n)*pi2/r)*-.5:a*2**(-10*(e-=1))*Math.sin((e-n)*pi2/r)*.5+1}},decomposeEasing=e=>{const[t,r=1,a=.4]=e.trim().split(" ");return{easing:t,amplitude:r,period:a}},ease=({easing:e,amplitude:t,period:r},a)=>easings[e](a,t,r),extractRegExp=/-?\d*\.?\d+/g,extractStrings=e=>e.split(extractRegExp),extractNumbers=e=>e.match(extractRegExp).map(Number),sanitize=e=>e.map(e=>{const t=String(e);return t.startsWith("#")?rgba(t):t}),addPropertyKeyframes=(e,t)=>{const r=sanitize(t),a=extractStrings(first(r));return{property:e,strings:a,numbers:r.map(extractNumbers),round:first(a).startsWith("rgb")}},createAnimationKeyframes=(e,t)=>Object.entries(e).map(([e,r])=>addPropertyKeyframes(e,isFunction(r)?r(t):r)),getCurrentValue=(e,t,r)=>e+(t-e)*r,recomposeValue=([e,t],r,a,n)=>r.reduce((r,i,s)=>{const o=s-1,c=getCurrentValue(e[o],t[o],n);return r+(a&&s<4?Math.round(c):c)+i}),createStyles=(e,t)=>e.reduce((e,{property:r,numbers:a,strings:n,round:i})=>(e[r]=recomposeValue(a,n,i,t),e),{}),reverseKeyframes=e=>e.forEach(({numbers:e})=>e.reverse()),rAF={all:new Set,add(e){this.all.add(e).size<2&&requestAnimationFrame(tick)}},paused={},trackTime=(e,t)=>{e.startTime||(e.startTime=t),e.elapsed=t-e.startTime},resetTime=e=>e.startTime=0,getProgress=({elapsed:e,duration:t})=>t>0?Math.min(e/t,1):1,setSpeed=(e,t,r)=>e>0?(isFunction(t)?t(r):t)/e:0,addAnimations=(e,t)=>{const{elements:r=null,easing:a="out-elastic",duration:n=1e3,delay:i=0,speed:s=1,loop:o=!1,optimize:c=!1,direction:u="normal",change:l=null,...m}=e,d={totalDuration:-1};getElements(r).forEach(async(e,t)=>{const r=createAnimationKeyframes(m,t),p={element:e,keyframes:r,loop:o,optimize:c,direction:u,change:l,easing:decomposeEasing(a),duration:setSpeed(s,n,t)},g=setSpeed(s,i,t),f=g+p.duration;"normal"!=u&&reverseKeyframes(r),c&&accelerate(e,r),f>d.totalDuration&&(d.animation=p,d.totalDuration=f),g&&await delay(g),rAF.add(p)});const{animation:p}=d;p&&(p.end=t,p.options=e)},tick=e=>{const{all:t}=rAF;t.forEach(r=>{trackTime(r,e);const{element:a,keyframes:n,loop:i,optimize:s,direction:o,change:c,easing:u,end:l}=r,m=getProgress(r);if(o){let e=m;switch(m){case 0:"alternate"==o&&reverseKeyframes(n);break;case 1:i?resetTime(r):(t.delete(r),s&&accelerate(a)),l&&l(r.options);break;default:e=ease(u,m)}return c&&l&&c(e),void(a&&Object.assign(a.style,createStyles(n,e)))}m<1||(t.delete(r),l(r.duration))}),t.size&&requestAnimationFrame(tick)};document.addEventListener("visibilitychange",()=>{const e=performance.now();if(document.hidden){const{all:t}=rAF;return paused.time=e,paused.all=new Set(t),void t.clear()}const{all:t,time:r}=paused;if(!t)return;const a=e-r;requestAnimationFrame(()=>t.forEach(e=>{e.startTime+=a,rAF.add(e)}))});export default e=>new Promise(t=>addAnimations(e,t));export const delay=e=>new Promise(t=>rAF.add({duration:e,end:t}));export const stop=e=>{const{all:t}=rAF,r=getElements(e);return t.forEach(e=>{r.includes(e.element)&&t.delete(e)}),r};